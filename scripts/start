#!/usr/bin/env node

const { server, io } = require('../server/app')
const { subscribeToVechainBlocks } = require('../server/lib/connex')
const port = process.env.PORT
const path = require('path')
const childProcess = require('child_process')
const logger = require('../server/lib/logger')
const client = require('../server/database')

let gettingMissingInProgress = false

server.listen(port, async () => {
  console.log(`server started on port ${port}`)
  await startVechainConnection(io, client)
})

async function startVechainConnection(io, client) {
  try {
    setInterval(() => {
      if (!gettingMissingInProgress) {
        gettingMissingInProgress = true
        const gettingMissing = childProcess.fork(path.join(__dirname, './getMissingBlocksAndTransactions'))
        gettingMissing.on('exit', function() {
          gettingMissingInProgress = false
        })
      }
    }, 10000)
    await subscribeToVechainBlocks(io, client)
  } catch(error) {
    logger.error(`[startVechainConnection]: ${error.message}`)
    setTimeout(async () => {
      await startVechainConnection(io, client)
    }, 500)
  }
}
